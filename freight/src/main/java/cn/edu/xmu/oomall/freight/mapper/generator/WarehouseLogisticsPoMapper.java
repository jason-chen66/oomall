package cn.edu.xmu.oomall.freight.mapper.generator;

import cn.edu.xmu.oomall.freight.mapper.generator.po.WarehouseLogisticsPo;
import cn.edu.xmu.oomall.freight.mapper.generator.po.WarehouseLogisticsPoExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface WarehouseLogisticsPoMapper {
    //manual
    @Delete({
            "delete from freight_warehouse_logistics",
            "where `warehouse_id` = #{warehouseId,jdbcType=BIGINT}",
            "and `shop_logistics_id` = #{shopLogisticsId,jdbcType=BIGINT}"
    })
    int deleteByWarehouseIdAndShopLogisticsId(Long warehouseId,Long shopLogisticsId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table freight_warehouse_logistics
     *
     * @mbg.generated
     */
    @Delete({
        "delete from freight_warehouse_logistics",
        "where `id` = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table freight_warehouse_logistics
     *
     * @mbg.generated
     */
    @Insert({
        "insert into freight_warehouse_logistics (`warehouse_id`, `shop_logistics_id`, ",
        "`begin_time`, `creator_id`, ",
        "`creator_name`, `modifier_id`, ",
        "`modifier_name`, `gmt_create`, ",
        "`gmt_modified`, `end_time`, ",
        "`invalid`)",
        "values (#{warehouseId,jdbcType=BIGINT}, #{shopLogisticsId,jdbcType=BIGINT}, ",
        "#{beginTime,jdbcType=TIMESTAMP}, #{creatorId,jdbcType=BIGINT}, ",
        "#{creatorName,jdbcType=VARCHAR}, #{modifierId,jdbcType=BIGINT}, ",
        "#{modifierName,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=TIMESTAMP}, ",
        "#{gmtModified,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, ",
        "#{invalid,jdbcType=TINYINT})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Long.class)
    int insert(WarehouseLogisticsPo row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table freight_warehouse_logistics
     *
     * @mbg.generated
     */
    @InsertProvider(type=WarehouseLogisticsPoSqlProvider.class, method="insertSelective")
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Long.class)
    int insertSelective(WarehouseLogisticsPo row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table freight_warehouse_logistics
     *
     * @mbg.generated
     */
    @SelectProvider(type=WarehouseLogisticsPoSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="warehouse_id", property="warehouseId", jdbcType=JdbcType.BIGINT),
        @Result(column="shop_logistics_id", property="shopLogisticsId", jdbcType=JdbcType.BIGINT),
        @Result(column="begin_time", property="beginTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="creator_id", property="creatorId", jdbcType=JdbcType.BIGINT),
        @Result(column="creator_name", property="creatorName", jdbcType=JdbcType.VARCHAR),
        @Result(column="modifier_id", property="modifierId", jdbcType=JdbcType.BIGINT),
        @Result(column="modifier_name", property="modifierName", jdbcType=JdbcType.VARCHAR),
        @Result(column="gmt_create", property="gmtCreate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="gmt_modified", property="gmtModified", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="end_time", property="endTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="invalid", property="invalid", jdbcType=JdbcType.TINYINT)
    })
    List<WarehouseLogisticsPo> selectByExample(WarehouseLogisticsPoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table freight_warehouse_logistics
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "`id`, `warehouse_id`, `shop_logistics_id`, `begin_time`, `creator_id`, `creator_name`, ",
        "`modifier_id`, `modifier_name`, `gmt_create`, `gmt_modified`, `end_time`, `invalid`",
        "from freight_warehouse_logistics",
        "where `id` = #{id,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="warehouse_id", property="warehouseId", jdbcType=JdbcType.BIGINT),
        @Result(column="shop_logistics_id", property="shopLogisticsId", jdbcType=JdbcType.BIGINT),
        @Result(column="begin_time", property="beginTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="creator_id", property="creatorId", jdbcType=JdbcType.BIGINT),
        @Result(column="creator_name", property="creatorName", jdbcType=JdbcType.VARCHAR),
        @Result(column="modifier_id", property="modifierId", jdbcType=JdbcType.BIGINT),
        @Result(column="modifier_name", property="modifierName", jdbcType=JdbcType.VARCHAR),
        @Result(column="gmt_create", property="gmtCreate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="gmt_modified", property="gmtModified", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="end_time", property="endTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="invalid", property="invalid", jdbcType=JdbcType.TINYINT)
    })
    WarehouseLogisticsPo selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table freight_warehouse_logistics
     *
     * @mbg.generated
     */
    @UpdateProvider(type=WarehouseLogisticsPoSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("row") WarehouseLogisticsPo row, @Param("example") WarehouseLogisticsPoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table freight_warehouse_logistics
     *
     * @mbg.generated
     */
    @UpdateProvider(type=WarehouseLogisticsPoSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("row") WarehouseLogisticsPo row, @Param("example") WarehouseLogisticsPoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table freight_warehouse_logistics
     *
     * @mbg.generated
     */
    @UpdateProvider(type=WarehouseLogisticsPoSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(WarehouseLogisticsPo row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table freight_warehouse_logistics
     *
     * @mbg.generated
     */
    @Update({
        "update freight_warehouse_logistics",
        "set `warehouse_id` = #{warehouseId,jdbcType=BIGINT},",
          "`shop_logistics_id` = #{shopLogisticsId,jdbcType=BIGINT},",
          "`begin_time` = #{beginTime,jdbcType=TIMESTAMP},",
          "`creator_id` = #{creatorId,jdbcType=BIGINT},",
          "`creator_name` = #{creatorName,jdbcType=VARCHAR},",
          "`modifier_id` = #{modifierId,jdbcType=BIGINT},",
          "`modifier_name` = #{modifierName,jdbcType=VARCHAR},",
          "`gmt_create` = #{gmtCreate,jdbcType=TIMESTAMP},",
          "`gmt_modified` = #{gmtModified,jdbcType=TIMESTAMP},",
          "`end_time` = #{endTime,jdbcType=TIMESTAMP},",
          "`invalid` = #{invalid,jdbcType=TINYINT}",
        "where `id` = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(WarehouseLogisticsPo row);
}