package cn.edu.xmu.oomall.freight.mapper.generator;

import cn.edu.xmu.oomall.freight.mapper.generator.po.WarehouseRegionPo;
import cn.edu.xmu.oomall.freight.mapper.generator.po.WarehouseRegionPoExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface WarehouseRegionPoMapper {
    //manual
    @Select({
            "<script>",
            "SELECT * FROM",
            "(SELECT * FROM freight_warehouse_region WHERE warehouse_id IN",
            "<foreach collection='warehouseIds' item='warehouseId' open='(' separator=',' close=')'>",
            "#{warehouseId}",
            "</foreach>",
            " AND region_id IN",
            "<foreach collection='regionIds' item='regionId' open='(' separator=',' close=')'>",
            "#{regionId}",
            "</foreach>",
            ") AS wr JOIN",
            "(SELECT id warehouse_id_w, priority FROM freight_warehouse)AS w ON wr.warehouse_id = w.warehouse_id_w",
            "ORDER BY priority",
            "</script>"
    })
    @Results({
            @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
            @Result(column="warehouse_id", property="warehouseId", jdbcType=JdbcType.BIGINT),
            @Result(column="region_id", property="regionId", jdbcType=JdbcType.BIGINT),
            @Result(column="begin_time", property="beginTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="end_time", property="endTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="creator_id", property="creatorId", jdbcType=JdbcType.BIGINT),
            @Result(column="creator_name", property="creatorName", jdbcType=JdbcType.VARCHAR),
            @Result(column="modifier_id", property="modifierId", jdbcType=JdbcType.BIGINT),
            @Result(column="modifier_name", property="modifierName", jdbcType=JdbcType.VARCHAR),
            @Result(column="gmt_create", property="gmtCreate", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="gmt_modified", property="gmtModified", jdbcType=JdbcType.TIMESTAMP)
    })
    List<WarehouseRegionPo> selectByRegionIdAndWarehouseIdOrderByWarehousePriority(@Param("regionIds") List<Long> regionIds, @Param("warehouseIds") List<Long> warehouseIds);

    @Select({
            "<script>",
            "SELECT * FROM",
            "(SELECT * FROM freight_warehouse_region WHERE region_id IN",
            "<foreach collection='regionIds' item='regionId' open='(' separator=',' close=')'>",
            "#{regionId}",
            "</foreach>",
            ") AS wr JOIN",
            "(SELECT id warehouse_id_w, priority FROM freight_warehouse)AS w ON wr.warehouse_id = w.warehouse_id_w",
            "ORDER BY priority",
            "</script>"
    })
    @Results({
            @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
            @Result(column="warehouse_id", property="warehouseId", jdbcType=JdbcType.BIGINT),
            @Result(column="region_id", property="regionId", jdbcType=JdbcType.BIGINT),
            @Result(column="begin_time", property="beginTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="end_time", property="endTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="creator_id", property="creatorId", jdbcType=JdbcType.BIGINT),
            @Result(column="creator_name", property="creatorName", jdbcType=JdbcType.VARCHAR),
            @Result(column="modifier_id", property="modifierId", jdbcType=JdbcType.BIGINT),
            @Result(column="modifier_name", property="modifierName", jdbcType=JdbcType.VARCHAR),
            @Result(column="gmt_create", property="gmtCreate", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="gmt_modified", property="gmtModified", jdbcType=JdbcType.TIMESTAMP)
    })
    List<WarehouseRegionPo> selectByRegionIdOrderByWarehousePriority(@Param("regionIds") List<Long> regionIds);


    //manual
    @Delete({
            "delete from freight_warehouse_region",
            "where `warehouse_id` = #{warehouseId,jdbcType=BIGINT}",
            "and `region_id` = #{regionId,jdbcType=BIGINT}"
    })
    int deleteByWarehouseIdAndRegionId(Long warehouseId,Long regionId);
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table freight_warehouse_region
     *
     * @mbg.generated
     */
    @Delete({
        "delete from freight_warehouse_region",
        "where `id` = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table freight_warehouse_region
     *
     * @mbg.generated
     */
    @Insert({
        "insert into freight_warehouse_region (`warehouse_id`, `region_id`, ",
        "`begin_time`, `end_time`, ",
        "`creator_id`, `creator_name`, ",
        "`modifier_id`, `modifier_name`, ",
        "`gmt_create`, `gmt_modified`)",
        "values (#{warehouseId,jdbcType=BIGINT}, #{regionId,jdbcType=BIGINT}, ",
        "#{beginTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, ",
        "#{creatorId,jdbcType=BIGINT}, #{creatorName,jdbcType=VARCHAR}, ",
        "#{modifierId,jdbcType=BIGINT}, #{modifierName,jdbcType=VARCHAR}, ",
        "#{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Long.class)
    int insert(WarehouseRegionPo row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table freight_warehouse_region
     *
     * @mbg.generated
     */
    @InsertProvider(type=WarehouseRegionPoSqlProvider.class, method="insertSelective")
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Long.class)
    int insertSelective(WarehouseRegionPo row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table freight_warehouse_region
     *
     * @mbg.generated
     */
    @SelectProvider(type=WarehouseRegionPoSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="warehouse_id", property="warehouseId", jdbcType=JdbcType.BIGINT),
        @Result(column="region_id", property="regionId", jdbcType=JdbcType.BIGINT),
        @Result(column="begin_time", property="beginTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="end_time", property="endTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="creator_id", property="creatorId", jdbcType=JdbcType.BIGINT),
        @Result(column="creator_name", property="creatorName", jdbcType=JdbcType.VARCHAR),
        @Result(column="modifier_id", property="modifierId", jdbcType=JdbcType.BIGINT),
        @Result(column="modifier_name", property="modifierName", jdbcType=JdbcType.VARCHAR),
        @Result(column="gmt_create", property="gmtCreate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="gmt_modified", property="gmtModified", jdbcType=JdbcType.TIMESTAMP)
    })
    List<WarehouseRegionPo> selectByExample(WarehouseRegionPoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table freight_warehouse_region
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "`id`, `warehouse_id`, `region_id`, `begin_time`, `end_time`, `creator_id`, `creator_name`, ",
        "`modifier_id`, `modifier_name`, `gmt_create`, `gmt_modified`",
        "from freight_warehouse_region",
        "where `id` = #{id,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="warehouse_id", property="warehouseId", jdbcType=JdbcType.BIGINT),
        @Result(column="region_id", property="regionId", jdbcType=JdbcType.BIGINT),
        @Result(column="begin_time", property="beginTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="end_time", property="endTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="creator_id", property="creatorId", jdbcType=JdbcType.BIGINT),
        @Result(column="creator_name", property="creatorName", jdbcType=JdbcType.VARCHAR),
        @Result(column="modifier_id", property="modifierId", jdbcType=JdbcType.BIGINT),
        @Result(column="modifier_name", property="modifierName", jdbcType=JdbcType.VARCHAR),
        @Result(column="gmt_create", property="gmtCreate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="gmt_modified", property="gmtModified", jdbcType=JdbcType.TIMESTAMP)
    })
    WarehouseRegionPo selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table freight_warehouse_region
     *
     * @mbg.generated
     */
    @UpdateProvider(type=WarehouseRegionPoSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("row") WarehouseRegionPo row, @Param("example") WarehouseRegionPoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table freight_warehouse_region
     *
     * @mbg.generated
     */
    @UpdateProvider(type=WarehouseRegionPoSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("row") WarehouseRegionPo row, @Param("example") WarehouseRegionPoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table freight_warehouse_region
     *
     * @mbg.generated
     */
    @UpdateProvider(type=WarehouseRegionPoSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(WarehouseRegionPo row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table freight_warehouse_region
     *
     * @mbg.generated
     */
    @Update({
        "update freight_warehouse_region",
        "set `warehouse_id` = #{warehouseId,jdbcType=BIGINT},",
          "`region_id` = #{regionId,jdbcType=BIGINT},",
          "`begin_time` = #{beginTime,jdbcType=TIMESTAMP},",
          "`end_time` = #{endTime,jdbcType=TIMESTAMP},",
          "`creator_id` = #{creatorId,jdbcType=BIGINT},",
          "`creator_name` = #{creatorName,jdbcType=VARCHAR},",
          "`modifier_id` = #{modifierId,jdbcType=BIGINT},",
          "`modifier_name` = #{modifierName,jdbcType=VARCHAR},",
          "`gmt_create` = #{gmtCreate,jdbcType=TIMESTAMP},",
          "`gmt_modified` = #{gmtModified,jdbcType=TIMESTAMP}",
        "where `id` = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(WarehouseRegionPo row);
}